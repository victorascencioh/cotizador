{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","helper.js","componentes/Resumen.js","componentes/Resultado.js","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Formulario","marcaRef","React","createRef","yearRef","planBasicoRef","planCompletoRf","cotizarSeguro","e","preventDefault","plan","_this","current","checked","infoAuto","marca","value","year","currentTarget","reset","onSubmit","this","name","ref","type","defaultChecked","Component","primeraMayuscula","texto","charAt","toUpperCase","slice","Resumen","mostrarResumen","_this$props$datos","datos","Resultado","resultado","mensaje","react_transition_group","component","classNames","key","timeout","enter","exit","App","state","Date","getFullYear","obtenerDiferenciaAnio","modelo","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","datosAuto","setState","console","log","componentes_Header","componentes_Formulario","componentes_Resumen","componentes_Resultado","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee4c2c73.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = props => {\n\treturn(\n\t\t<header className=\"top\">\n\t\t\t<h1>\n\t\t\t\t{props.titulo}\n\t\t\t</h1>\n\t\t</header>\n\t)\n}\n\nexport default Header;","import React, {Component} from 'react';\n\nclass Formulario extends Component{\n\n\t//refs son para leer los valores de los campos de un formulario\n\t/*constructor(props) {\n\t\tsuper(props);\n\t\tthis.marcaRef = React.createRef();\n\t\tthis.yearRef = React.createRef();\n\t\tthis.planBasicoRef = React.createRef();\n\t\tthis.planCompletoRf = React.createRef();\n\t}*/\n\n\tmarcaRef = React.createRef();\n\tyearRef = React.createRef();\n\tplanBasicoRef = React.createRef();\n\tplanCompletoRf = React.createRef();\n\n\tcotizarSeguro = (e) => {\n\t\te.preventDefault();\n\t\t\n\t\tconst plan = this.planBasicoRef.current.checked ? \"basico\" : \"completo\";\n\t\t//obtener los datos\n\n\t\t//crear el objeto\n\t\tconst infoAuto = {\n\t\t\tmarca: \tthis.marcaRef.current.value,\n\t\t\tyear: \tthis.yearRef.current.value,\n\t\t\tplan: \tplan,\n\t\t}\n\n\t\t//enviarlo a componente principal\n\t\tthis.props.cotizarSeguro(infoAuto);\n\n\t\t//Resetear el formulario (opcional)\n\t\te.currentTarget.reset();\n\t}\n\n\t render() {\n        return (\n            <form className=\"cotizar-auto\" onSubmit={this.cotizarSeguro}>\n                <div className=\"campo\">\n                    <label>Marca</label>\n                    <select name=\"marca\" ref={this.marcaRef}>\n                        <option value=\"americano\">Americano</option>\n                        <option value=\"europeo\">Europeo</option>\n                        <option value=\"asiatico\">Asiatico</option>\n                    </select>\n                </div>\n\n                <div className=\"campo\">\n                    <label>Año</label>\n                    <select name=\"year\" ref={this.yearRef}>\n                        <option value=\"2018\">2018</option>\n                        <option value=\"2017\">2017</option>\n                        <option value=\"2016\">2016</option>\n                        <option value=\"2015\">2015</option>\n                        <option value=\"2014\">2014</option>\n                        <option value=\"2013\">2013</option>\n                        <option value=\"2012\">2012</option>\n                        <option value=\"2011\">2011</option>\n                        <option value=\"2010\">2010</option>\n                        <option value=\"2009\">2009</option>\n                        <option value=\"2008\">2008</option>\n                    </select>\n                </div>\n                <div className=\"campo\">\n                    <label>Plan:</label>\n                    <input type=\"radio\" name=\"plan\" value=\"basico\" ref={this.planBasicoRef} defaultChecked=\"checked\"/> Básico\n                    <input type=\"radio\" name=\"plan\" value=\"completo\" ref={this.planCompletoRf} /> Completo\n                </div>\n\n                <button type=\"submit\" className=\"boton\">Cotizar</button>\n            </form>\n        );\n    }\n}\n\nexport default Formulario;","export function obtenerDiferenciaAnio(year) {\n   return new Date().getFullYear() - year;\n}\n\nexport function calcularMarca( modelo ) {\n    let incremento;\n\n    switch (modelo) {\n        case 'europeo':\n            incremento = 1.30;\n            break;\n        case 'americano':\n            incremento = 1.15;\n            break;\n        case 'asiatico':\n            incremento = 1.05;\n            break;\n        default:\n            break;\n    }\n\n    return incremento;\n}\nexport function obtenerPlan( plan ) {\n    return (plan === 'basico') ? 1.20 : 1.50;\n}\nexport function primeraMayuscula(texto) {\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\n}","import React, { Component } from 'react';\nimport {primeraMayuscula} from '../helper.js'\n\nclass Resumen extends Component {\n\n\tmostrarResumen = () => {\n\t\tconst {marca, plan, year} = this.props.datos; \n\n\t\tif(!marca || !plan || !year) return null;\n\t\treturn(\n\t\t\t<div className=\"resumen\">\n\t\t\t\t<h2>\n\t\t\t\t\tResumen de Cotización\n\t\t\t\t</h2>\n\t\t\t\t<li>Marca: {primeraMayuscula(marca)}</li>\n\t\t\t\t<li>Plan: {primeraMayuscula(plan)}</li>\n\t\t\t\t<li>Año del auto: {primeraMayuscula(year)}</li>\n\t\t\t</div>\n\t\t)\n\n\t}\n\n\trender() {\t\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{this.mostrarResumen()}\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Resumen;","import React, { Component } from 'react';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\n\nclass Resultado extends Component {\n\trender() {\n\t\tconst resultado = this.props.resultado;\n\t\tconst mensaje = (!resultado) ? 'Elije Marca, Plan, Año y tipo de seguro' : 'El total es : $';\n\t\treturn(\n\t\t\t<div className=\"gran-total\">\n\t\t\t\t{mensaje}\n\t\t\t\t<TransitionGroup component=\"span\"\n\t\t\t\tclassName=\"resultado\">\n\t\t\t\t\t<CSSTransition\n\t\t\t\t\t\tclassNames=\"resultado\"\n\t\t\t\t\t\tkey={resultado}\n\t\t\t\t\t\ttimeout={{enter: 500, exit:500}}>\n\t\t\t\t\t\t<span>{resultado}</span>\n\t\t\t\t\t</CSSTransition>\n\t\t\t\t</TransitionGroup>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Resultado;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Resumen from './Resumen';\nimport Resultado from './Resultado';\nimport {obtenerDiferenciaAnio, calcularMarca, obtenerPlan} from '../helper';\n\nclass App extends Component {\n\n  state = {\n    resultado: '',\n    datos: {}\n  }\n\n  cotizarSeguro = (datos) => {\n      const {marca,plan,year} = datos;\n\n      //Agregar una base de 2000,\n      let resultado = 2000;\n\n      //Obtener la diferencia de años y \n      const diferencia = obtenerDiferenciaAnio(year);\n\n      //por cada año restar 3% al valor del seguro\n      resultado -= ((diferencia * 3) * resultado) / 100;\n\n      //americano 15%, asiatico 5%, europeo 30%\n      resultado = calcularMarca(marca) * resultado;\n\n      //El plan basico 20%, completa 50%\n      let incrementoPlan = obtenerPlan(plan);\n\n      resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n\n      //Ya tenemos costo.\n      let datosAuto = {\n        marca:  marca,\n        plan:   plan,\n        year:   year\n      }\n      this.setState({\n        resultado: resultado,\n        datos: datosAuto\n      });\n      console.log(resultado);\n\n  }\n\n  render() {\n    return (\n      <div className=\"contenedor\">\n          <Header \n            titulo=\"Cotizador de seguro de autos\"\n          />\n\n          <div className=\"contenedor-formulario\">\n            <Formulario \n              cotizarSeguro={this.cotizarSeguro}\n            />          \n          <Resumen \n            datos={this.state.datos}\n          />\n          <Resultado \n            resultado={this.state.resultado}\n          />\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}